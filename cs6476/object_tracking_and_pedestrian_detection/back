        x_weighted_mean = 0
        y_weighted_mean = 0

        for i in range(self.num_particles):
            x_weighted_mean += self.particles[i, 0] * self.weights[i]
            y_weighted_mean += self.particles[i, 1] * self.weights[i]

        mean = [x_weighted_mean,y_weighted_mean]
        avg = mean
        # For every state, compute the difference between it and the weighted average
        diff = np.zeros( (self.num_particles, 1) )
        for i in range(self.num_particles):
            diff[i,0] = np.sqrt( (self.particles[i,0]-mean[0])**2 + (self.particles[i,1]-mean[1])**2 )
        #end for
        
        weighted_diff = np.sum(diff*self.weights)/float(np.sum(self.weights))
        spread = weighted_diff

        for i in range(self.num_particles):
            # Draw particles
            pt1 = (int(self.particles[i,1]), int(self.particles[i,0]))
            #print pt1
            cv2.circle(frame_in, pt1, 1, (0,255,0), thickness=2)
        #end for  
        
        # Draw the tracking window
        pt1 = ( int(avg[1]-self.width/2), int(avg[0]-self.height/2) )
        pt2 = ( int(avg[1]+self.width/2), int(avg[0]+self.height/2) )
        cv2.rectangle(frame_in, pt1, pt2, (0, 255, 0), thickness=2)
        
        # Draw the estimate for the standard deviation
        # avg is in (u,v) coordinates (row, columns). Switch to (x, y)
        cv2.circle(frame_in, (avg[1], avg[0]), spread.astype('int'), (0,0,255), thickness=2)